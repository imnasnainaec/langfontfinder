apiVersion: v1
kind: ServiceAccount
metadata:
  name: langfontfinder
  namespace: wstech
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: wstech
  name: deployer
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: redepoly
  namespace: wstech
subjects:
- kind: ServiceAccount
  name: langfontfinder
roleRef:
  kind: Role
  name: deployer
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: langfontfinder
  namespace: wstech
  labels:
    app: langfontfinder
spec:
  replicas: 1
  minReadySeconds: 5
  progressDeadlineSeconds: 30
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: langfontfinder
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: langfontfinder
      name: langfontfinder
      namespace: wstech
    spec:
      serviceAccountName: langfontfinder
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - langfontfinder
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      containers:
      - name: service
        image: ghcr.io/silnrsi/langfontfinder
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /status
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 15
        livenessProbe:
          tcpSocket:
            port: 80

      - name: api
        image: alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: DEPLOY_KEY
          valueFrom:
            secretKeyRef:
              name: langfontfinder
              key: deploy_key
        - name: SITE_GIT_BRANCH
          valueFrom:
            configMapKeyRef:
              name: langfontfinder
              key: site-branch
        command: ["sh", "-c"]
        args: 
        - |
          set -e
          apk add curl git webhook
          exec webhook -verbose \
            -urlprefix=api \
            -template \
            -hooks=/webhooks/hooks.yaml
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: webhooks
          mountPath: /webhooks
          readOnly: true

      volumes:
      - name: webhooks
        configMap:
          name: langfontfinder
          items:
          - key: deployer
            path: deploy.sh
            mode: 365
          - key: webhooks
            path: hooks.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: langfontfinder
  namespace: wstech
data:
  site-branch: main
  deployer: |
    #!/bin/sh
    SERVICEACCOUNT=/run/secrets/kubernetes.io/serviceaccount
    NAMESPACE=$(cat $SERVICEACCOUNT/namespace)
    DEPLOYMENTS="https://kubernetes.default.svc/apis/apps/v1/namespaces/$NAMESPACE/deployments"
    TOKEN=$(cat $SERVICEACCOUNT/token)
    NOW=$(date -Is)
    curl --location --request PATCH "$DEPLOYMENTS/langfontfinder?fieldManager=kubectl-rollout" \
    --cacert $SERVICEACCOUNT/ca.crt \
    --header 'Content-Type: application/strategic-merge-patch+json' \
    --header "Authorization: Bearer $TOKEN" \
    --data-raw "{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"kubectl.kubernetes.io/restartedAt\": \"$NOW\"}}}}}"
  webhooks: |
    - id: deploy
      execute-command: /webhooks/deploy.sh
      command-working-directory: /mnt
      http-methods: [POST]
      trigger-rule:
        and:
        - or:
          - match:
              type: payload-hmac-sha256
              secret: '{{ getenv "DEPLOY_KEY" }}'
              parameter:
                source: header
                name: X-Hub-Signature-256
          - match:
              type: payload-hmac-sha1
              secret: '{{ getenv "DEPLOY_KEY" }}'
              parameter:
                source: header
                name: X-Hub-Signature
        - match:
            type: value
            value: push
            parameter:
              source: payload
              name: event
        - match:
            type: value
            value: 'refs/heads/{{getenv "SITE_GIT_BRANCH"}}'
            parameter:
              source: payload
              name: ref
